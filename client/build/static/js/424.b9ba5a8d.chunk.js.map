{"version":3,"file":"static/js/424.b9ba5a8d.chunk.js","mappings":"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","sources":["routes/manage-account/ManageAccount.styles.tsx","routes/manage-account/ManageAccount.route.tsx","../node_modules/@mui/icons-material/DeleteForever.js"],"sourcesContent":["import { Box, styled } from '@mui/material'\n\nexport const ManageAccountFormContainer = styled(Box)(({ theme }) => ({\n  margin: 'auto',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  padding: '0',\n  width: '100%',\n\n  '& form': {\n    width: '100%',\n    maxWidth: '500px',\n    marginTop: theme.spacing(1),\n\n    '& > .submit-btn': {\n      marginTop: theme.spacing(1),\n    },\n\n    '& .delete-account-btn': {\n      marginTop: theme.spacing(1),\n      float: 'right',\n    },\n  },\n}))\n","import {\n  Alert,\n  Box,\n  Button,\n  Checkbox,\n  FormControlLabel,\n  FormGroup,\n  TextField,\n  Typography,\n} from '@mui/material'\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever'\n\nimport { ChangeEvent, FormEvent, useContext, useEffect, useState } from 'react'\nimport { deleteUserById, getUserByEmail, updateUser } from '../../api/users.api'\nimport { Message } from '../../components/snackbar-message/SnackbarMessage.component'\nimport { UserContext } from '../../contexts/user.context'\nimport { ManageAccountFormContainer } from './ManageAccount.styles'\n\nfunction ManageAccount() {\n  const INITIAL_MESSAGE: Message = {\n    severity: 'success',\n    content: '',\n  }\n  const [message, setMessage] = useState(INITIAL_MESSAGE)\n  const { user, clearCurrentUser } = useContext(UserContext)\n\n  const [checked, setChecked] = useState({\n    checkboxPassword: false,\n    checkboxPhone: false,\n    checkboxAddress: false,\n  })\n\n  const [updateForm, setUpdateForm] = useState({\n    password: '',\n    phone: '',\n    address: '',\n  })\n\n  useEffect(() => {\n    getUserByEmail(user.e_mail)\n      .then((u) =>\n        setUpdateForm({\n          password: u.data.password,\n          phone: u.data.phone,\n          address: u.data.address,\n        })\n      )\n      .catch((err) => console.error(err.message))\n  }, [user])\n\n  const handleTextChange = (event: ChangeEvent) => {\n    const element = event.target as HTMLInputElement\n    let { name, value } = element\n\n    setUpdateForm({\n      ...updateForm,\n      [name]: value,\n    })\n  }\n\n  const handleCheckedChange = (event: ChangeEvent) => {\n    let name = event.target.id as keyof typeof checked\n\n    setChecked({\n      ...checked,\n      [name]: !checked[name],\n    })\n  }\n\n  const handleSubmit = (e: FormEvent) => {\n    e.preventDefault()\n    updateUser({ ...updateForm, e_mail: user.e_mail })\n      .then(() => alert('User information has been successfully changed!'))\n      .then(() =>\n        setChecked({\n          checkboxPassword: false,\n          checkboxPhone: false,\n          checkboxAddress: false,\n        })\n      )\n      .catch((err) => console.error(err.message))\n  }\n\n  const deleteAccount = (e: FormEvent) => {\n    const deleted = window.confirm(\n      'Are you sure you want to delete your account?'\n    )\n\n    if (deleted)\n      deleteUserById(user.user_id)\n        .then(() => clearCurrentUser())\n        .catch((e) => console.error(e))\n  }\n\n  return (\n    <ManageAccountFormContainer>\n      <Typography component=\"h1\" variant=\"h5\" gutterBottom>\n        Manage Account\n      </Typography>\n      <Box component=\"form\" onSubmit={handleSubmit}>\n        {message.content && (\n          <Alert\n            severity={message.severity}\n            onClose={() => setMessage(INITIAL_MESSAGE)}\n          >\n            {message.content}\n          </Alert>\n        )}\n        <FormGroup>\n          <FormControlLabel\n            control={\n              <Checkbox\n                id=\"checkboxPassword\"\n                checked={checked.checkboxPassword}\n                onChange={handleCheckedChange}\n              />\n            }\n            label=\"Update Password\"\n          />\n          <TextField\n            margin=\"normal\"\n            fullWidth\n            name=\"password\"\n            label=\"New Password\"\n            id=\"password\"\n            value={updateForm.password}\n            onChange={handleTextChange}\n            required\n            type={'password'}\n            disabled={!checked.checkboxPassword}\n          />\n        </FormGroup>\n        <FormGroup>\n          <FormControlLabel\n            control={\n              <Checkbox\n                id=\"checkboxPhone\"\n                checked={checked.checkboxPhone}\n                onChange={handleCheckedChange}\n              />\n            }\n            label=\"Update Phone\"\n          />\n          <TextField\n            margin=\"normal\"\n            fullWidth\n            name=\"phone\"\n            label=\"New Phone Number\"\n            id=\"phone\"\n            value={updateForm.phone}\n            onChange={handleTextChange}\n            required\n            type={'tel'}\n            disabled={!checked.checkboxPhone}\n          />\n        </FormGroup>\n        <FormGroup>\n          <FormControlLabel\n            control={\n              <Checkbox\n                id=\"checkboxAddress\"\n                checked={checked.checkboxAddress}\n                onChange={handleCheckedChange}\n              />\n            }\n            label=\"Update Address\"\n          />\n          <TextField\n            margin=\"normal\"\n            fullWidth\n            name=\"address\"\n            label=\"New Address\"\n            id=\"address\"\n            value={updateForm.address}\n            onChange={handleTextChange}\n            required\n            multiline\n            rows={4}\n            disabled={!checked.checkboxAddress}\n          />\n        </FormGroup>\n\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          className=\"submit-btn\"\n        >\n          Update\n        </Button>\n\n        <Button\n          variant=\"text\"\n          color=\"error\"\n          startIcon={<DeleteForeverIcon />}\n          onClick={deleteAccount}\n          className=\"delete-account-btn\"\n        >\n          Delete Account\n        </Button>\n      </Box>\n    </ManageAccountFormContainer>\n  )\n}\n\nexport default ManageAccount\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12 1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'DeleteForever');\n\nexports.default = _default;"],"names":["ManageAccountFormContainer","styled","Box","theme","margin","display","flexDirection","alignItems","padding","width","maxWidth","marginTop","spacing","float","INITIAL_MESSAGE","severity","content","useState","message","setMessage","useContext","UserContext","user","clearCurrentUser","checkboxPassword","checkboxPhone","checkboxAddress","checked","setChecked","password","phone","address","updateForm","setUpdateForm","useEffect","getUserByEmail","e_mail","then","u","data","catch","err","console","error","handleTextChange","event","element","target","name","value","handleCheckedChange","id","Typography","component","variant","gutterBottom","onSubmit","e","preventDefault","updateUser","alert","Alert","onClose","FormGroup","FormControlLabel","control","Checkbox","onChange","label","TextField","fullWidth","required","type","disabled","multiline","rows","Button","className","color","startIcon","DeleteForever","onClick","window","confirm","deleteUserById","user_id","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}